#!/bin/bash
#
# bootstrap files to its places.
#

source script/tangle

DOTFILES_ROOT="`pwd`"
MAXDEPTH=6

set -e

echo ''

tangle_orgfiles () {
    printf "\033[0;33mtangling org-mode files\033[0m \n"

    # Store path from all org files in a bash array
    orgfiles=( $(find $DOTFILES_ROOT -maxdepth $MAXDEPTH -name '*.org') )

    # Files which must not be tangled
    orgignore=(${DOTFILES_ROOT}/README.org)

    # Remove files to be ignored from org-files list
    for delete in ${orgignore[@]}
    do
        orgfiles=(${orgfiles[@]/$delete})
    done

    # Now we can tangle only the correct list
    for file in ${orgfiles[@]}
    do
        emacs-tangle ${file}
    done
}

info () {
    printf "\r\033[0;34m$1\033[0m\n"
}

user () {
    printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
    printf "\r\033[2K  [\033[0;32m  OK  \033[0m] $1\n"
}

fail () {
    printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
    echo ''
    exit
}

link_files () {
    ln -s $1 $2
    success "linked $1 to $2"
}

install_dotfiles () {
    info 'installing dotfiles'

    overwrite_all=false
    backup_all=false
    skip_all=false

    for source in `find $DOTFILES_ROOT -maxdepth $MAXDEPTH -name \*.symlink`
    do
        dest="$HOME/.`basename \"${source%.*}\"`"

        if [ -f $dest ] || [ -d $dest ]
        then
            overwrite=false
            backup=false
            skip=false

            if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
            then
              user "File already exists: `basename $source`, what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
              read -n 1 action

              case "$action" in
                o )
                  overwrite=true;;
                O )
                  overwrite_all=true;;
                b )
                  backup=true;;
                B )
                  backup_all=true;;
                s )
                  skip=true;;
                S )
                  skip_all=true;;
                * )
                  ;;
              esac
            fi

            if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
            then
                rm -rf $dest
                success "removed $dest"
            fi

            if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
            then
                mv $dest $dest\.backup
                success "moved $dest to $dest.backup"
            fi

            if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
            then
                link_files $source $dest
            else
                success "skipped $source"
            fi
        else
            link_files $source $dest
        fi
    done
}

tangle_orgfiles
install_dotfiles

echo ''
printf "\033[0;31mDone!\033[0m \n"
