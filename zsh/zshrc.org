* zsh configuration

** =$PATH= configuration 

Set values of =$PATH=. The options chosen here were:
- =-g= (global): any resulting parameter will not be restricted to local scope.
- =-U=: Remove duplicates - keep only the first occurrence of each duplicated value.
#+begin_src sh :tangle zshrc.symlink
typeset -gU path
#+end_src

*** Special folders
**** =0.sandbox=

Unprocessed items that don’t have a place yet in here. It is a temporary folder for files you're messing around with but don't need to save long-term. This may be items like software installers you’ve downloaded, files sent to you from colleagues, random text clippings and testing scripts. Files I decide I want to keep graduate from =0.sandbox= to =1.docs=. This folder must be emptied everyday. To avoid procrastination, resulting in a completely cluttered folder, you can keep a 'janitor' script, deleting its contents regularly.
#+begin_src sh :tangle zshrc.symlink
SANDBOX=$HOME/0.sandbox/
#+end_src

**** =1.documents=

Is the big kahuna(*) of all the six folders. It's the place where all the working files for your currently in-progress tasks, projects and clients go. Each project gets its own unique folder. You may have many sub-folders in this folder, but don't go deeper than 3 subfolders. This directory changes often and frequently, so you must clean it regularly. Because of this most of the files here are kept under github/gitlab control.

(*) Kahuna is a Hawaiian word, defined in Pukui & Elbert (1986) as a "priest, sorcerer, magician, wizard, minister, expert in any profession". (See also Ancient Hawaii.) Forty types of kahuna are listed in the book Tales from the Night Rainbow.
#+begin_src sh :tangle zshrc.symlink
DOCS=$HOME/1.documents/
#+end_src

**** =2.archive=

Completed projects, general reference items, and anything else which is important and you might want to look at again go here. From here you can create aliases for the default folder from your system, like 'Books' or 'Pictures'.  The files here don't change much if ever, and so you can back them up on a different (less frequent) schedule. Therefore I elected this folder to be actually a symbolic link to my Dropbox folder.
#+begin_src sh :tangle zshrc.symlink
ARCHIVE=$HOME/2.archive/
#+end_src

**** =opt=

Third-party software, not present among the official packages.
#+begin_src sh :tangle zshrc.symlink
OPT=$HOME/opt
#+end_src
*** Set pathdirs
#+begin_src sh :tangle zshrc.symlink
pathdirs=(
$HOME/.npm/bin
$HOME/.bin
$OPT/julia/bin
$OPT/nodejs/bin
$OPT/atom-editor/bin
$OPT/tw5
$OPT/bin
$OPT/sage
)
path=($path $pathdirs)
#+end_src

** Oh-my-zsh configuration

Path to oh-my-zsh configuration
#+begin_src sh :tangle zshrc.symlink
export ZSH=$HOME/.oh-my-zsh 
#+end_src

Further customizations
#+begin_src sh :tangle zshrc.symlink
export ZSH_CUSTOM=$HOME/.zsh_customizations
#+end_src

Choose theme
#+begin_src sh :tangle zshrc.symlink
export ZSH_THEME="vct-agnoster"
#+end_src

Plugins
#+begin_src sh :tangle zshrc.symlink
plugins=(git archlinux tmux)
#+end_src

Load [[https://github.com/robbyrussell/oh-my-zsh][oh-my-zsh]]
#+begin_src sh :tangle zshrc.symlink
source $ZSH/oh-my-zsh.sh 
#+end_src

Display red dots whilst waiting for completion
#+begin_src sh :tangle zshrc.symlink
COMPLETION_WAITING_DOTS="true"
#+end_src

** General configuration

*** History
 
#+begin_src sh :tangle zshrc.symlink
export HISTSIZE=10000
export SAVEHIST=10000
export HISTFILE=~/.zsh_history
#+end_src
*** Aliases

Load custom aliases
#+begin_src sh :tangle zshrc.symlink
[ -e "${HOME}/.zsh_aliases" ] && source "${HOME}/.zsh_aliases"
#+end_src

Linux provides various tools for archiving and compressing files such as zip, bzip, gzip, tar, rar etc. There are more tools that are not native to Linux, but provide good archiving and compressing abilities. With such a large number of tools at hand, sometimes it becomes difficult to remember all the commands. 'atool' allows you to manage these different file archives with a single command. 
#+begin_src sh :tangle zshrc.symlink
alias ae='aunpack' # ae = mnemonic for Archive Extracter
#+end_src

#+begin_src sh :tangle zshrc.symlink
alias df="df -H"
alias du="du -ch"
alias ls="ls --color=auto"
alias glog="git log --graph --oneline --decorate --date-order --color --boundary"
alias lh='ls -l .??*'
alias lhd='ls -ld .??*'

man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
            man "$@"
}
#+end_src

Solves GREP problem
#+begin_src sh :tangle zshrc.symlink
alias grep="/usr/bin/grep $GREP_OPTIONS"
unset GREP_OPTIONS
#+end_src

Preferred editor for local and remote sessions
#+begin_src sh :tangle zshrc.symlink
if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vi'
else
   export EDITOR='vim'
fi
#+end_src

#+begin_src sh :tangle zshrc.symlink
export ARCHFLAGS="-arch x86_64"
setopt HIST_IGNORE_DUPS
#+end_src

For sagemath
#+begin_src sh :tangle zshrc.symlink
alias sagenb="env SAGE_BROWSER=firefox sage -notebook"
#+end_src

TeXlive does not allow me to run bibtex on /tmp; to avoid this, set this variable
#+begin_src sh :tangle zshrc.symlink
export openout_any=a
export TEXMFHOME=~/texmf
#+end_src

Show only past commands beginning with the current input
#+begin_src sh :tangle zshrc.symlink
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"    history-beginning-search-backward
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}"  history-beginning-search-forward
#+end_src

*** Pacman utilities

List packages installed explicitly by the user
#+begin_src sh :tangle zshrc.symlink
lspacuser() {
    pacman -Qei | awk '/^Name/ { name=$3 } /^Groups/ { if ( $3 != "base" && $3 != "base-devel" ) { print name } }'
}
#+end_src

List packages installed from AUR
#+begin_src sh :tangle zshrc.symlink
lspacaur() {
   pacman -Qqm
}
#+end_src

Colored ls
#+begin_src sh :tangle zshrc.symlink
eval `dircolors /home/santos/.dircolors-solarized/dircolors.256dark`
#+end_src

Command completion
#+begin_src sh :tangle zshrc.symlink
autoload -U compinit
compinit
#+end_src





# Local Variables:
# mode: org
# End:
