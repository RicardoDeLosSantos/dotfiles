#
# vct's dotfiles: https://gitlab.com/padawanphysicist/dotfiles
#
# bash configuration
#

# PATH configuration {
#=============
# '0.inbox'
#
# Unprocessed items that donâ€™t have a place yet in here. It is a temporary
# folder for files you're messing around with but don't need to save long-term.
# This may be items like software installers youâ€™ve downloaded, files sent to
# you from colleagues, random text clippings and testing scripts. Files I
# decide I want to keep graduate from '0.sandbox' to '1.docs'. This folder must
# be emptied everyday. To avoid procrastination, resulting in a completely
# cluttered folder, you can keep a 'janitor' script, deleting its contents
# regularly.
SANDBOX=$HOME/0.inbox/

#=============
# '1.docs'
#
# Is the big kahuna(*) of all the six folders. It's the place where all the
# working files for your currently in-progress tasks, projects and clients
# go. Each project gets its own unique folder. You may have many sub-folders in
# this folder, but don't go deeper than 3 subfolders. This directory changes
# often and frequently, so you must clean it regularly. Because of this most of
# the files here are kept under github/gitlab control.
#
# (*) Kahuna is a Hawaiian word, defined in Pukui & Elbert (1986) as a "priest,
# sorcerer, magician, wizard, minister, expert in any profession". (See also
# Ancient Hawaii.) Forty types of kahuna are listed in the book Tales from the
# Night Rainbow.
DOCS=$HOME/1.docs/

#=============
# '2.archive'
#
# Completed projects, general reference items, and anything else which is
# important and you might want to look at again go here. From here you can
# create aliases for the default folder from your system, like 'Books' or
# 'Pictures'.  The files here don't change much if ever, and so you can back
# them up on a different (less frequent) schedule. Therefore I elected this
# folder to be actually a symbolic link to my Dropbox folder.
ARCHIVE=$HOME/2.archive/

#=============
# 'opt'
#
# Third-party software, not present among the official packages.
OPT=$HOME/opt

PATH=$PATH:$HOME/.bin:$OPT/julia/bin:

# }
# General configuration {
# History {
export HISTFILESIZE=20000
shopt -s histappend
#}
# Aliases {
# Linux provides various tools for archiving and compressing files such as zip,
# bzip, gzip, tar, rar etc. There are more tools that are not native to Linux,
# but provide good archiving and compressing abilities. With such a large
# number of tools at hand, sometimes it becomes difficult to remember all the
# commands. 'atool' allows you to manage these different file archives with a
# single command. 
alias ae='aunpack' # ae = mnemonic for Archive Extracter

alias df="df -H"
alias du="du -ch"
alias ls="ls --color=auto"
alias glog="git log --graph --oneline --decorate --date-order --color --boundary"
alias lh='ls -l .??*'
alias lhd='ls -ld .??*'
#}
# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vi'
else
   export EDITOR='vim'
fi

# Editor for editing data in xmgrace
export GRACE_EDITOR='vim'

# TeXlive does not allow me to run bibtex on /tmp; to avoid this, set this 
# variable
export openout_any=a
export TEXMFHOME=~/texmf

# Pacman utilities {

# List packages installed explicitly by the user
lspacuser() {
    pacman -Qei | awk '/^Name/ { name=$3 } /^Groups/ { if ( $3 != "base" && $3 != "base-devel" ) { print name } }'
}

# List packages installed from AUR
lspacaur() {
   pacman -Qqm
}

# Colored ls
eval `dircolors /home/santos/.dircolors-solarized/dircolors.256dark`

# }

# }
# PS1 prompt {
#  SETUP CONSTANTS
#  Bunch-o-predefined colors.  Makes reading code easier than escape sequences.
#  I don't remember where I found this.  o_O

# Reset
ColorOff="\[\033[0m\]"       # Text Reset
# Regular Colors {
Black="\[\033[0;30m\]"        # Black
Red="\[\033[0;31m\]"          # Red
Green="\[\033[0;32m\]"        # Green
Yellow="\[\033[0;33m\]"       # Yellow
Blue="\[\033[0;34m\]"         # Blue
Purple="\[\033[0;35m\]"       # Purple
Cyan="\[\033[0;36m\]"         # Cyan
White="\[\033[0;37m\]"        # White
Ochre="\[\033[38;5;95m\]"
Orange="\[\033[1;31m\]"
#}
# Bold {
BBlack="\[\033[1;30m\]"       # Black
BRed="\[\033[1;31m\]"         # Red
BGreen="\[\033[1;32m\]"       # Green
BYellow="\[\033[1;33m\]"      # Yellow
BBlue="\[\033[1;34m\]"        # Blue
BPurple="\[\033[1;35m\]"      # Purple
BCyan="\[\033[1;36m\]"        # Cyan
BWhite="\[\033[1;37m\]"       # White
#}
# Underline {
UBlack="\[\033[4;30m\]"       # Black
URed="\[\033[4;31m\]"         # Red
UGreen="\[\033[4;32m\]"       # Green
UYellow="\[\033[4;33m\]"      # Yellow
UBlue="\[\033[4;34m\]"        # Blue
UPurple="\[\033[4;35m\]"      # Purple
UCyan="\[\033[4;36m\]"        # Cyan
UWhite="\[\033[4;37m\]"       # White
#}
# Background {
On_Black="\[\033[40m\]"       # Black
On_Red="\[\033[41m\]"         # Red
On_Green="\[\033[42m\]"       # Green
On_Yellow="\[\033[43m\]"      # Yellow
On_Blue="\[\033[44m\]"        # Blue
On_Purple="\[\033[45m\]"      # Purple
On_Cyan="\[\033[46m\]"        # Cyan
On_White="\[\033[47m\]"       # White
#}
# High Intensty {
IBlack="\[\033[0;90m\]"       # Black
IRed="\[\033[0;91m\]"         # Red
IGreen="\[\033[0;92m\]"       # Green
IYellow="\[\033[0;93m\]"      # Yellow
IBlue="\[\033[0;94m\]"        # Blue
IPurple="\[\033[0;95m\]"      # Purple
ICyan="\[\033[0;96m\]"        # Cyan
IWhite="\[\033[0;97m\]"       # White
#}
# Bold High Intensty {
BIBlack="\[\033[1;90m\]"      # Black
BIRed="\[\033[1;91m\]"        # Red
BIGreen="\[\033[1;92m\]"      # Green
BIYellow="\[\033[1;93m\]"     # Yellow
BIBlue="\[\033[1;94m\]"       # Blue
BIPurple="\[\033[1;95m\]"     # Purple
BICyan="\[\033[1;96m\]"       # Cyan
BIWhite="\[\033[1;97m\]"      # White
#}
# High Intensty backgrounds {
On_IBlack="\[\033[0;100m\]"   # Black
On_IRed="\[\033[0;101m\]"     # Red
On_IGreen="\[\033[0;102m\]"   # Green
On_IYellow="\[\033[0;103m\]"  # Yellow
On_IBlue="\[\033[0;104m\]"    # Blue
On_IPurple="\[\033[10;95m\]"  # Purple
On_ICyan="\[\033[0;106m\]"    # Cyan
On_IWhite="\[\033[0;107m\]"   # White
#}
# Various variables you might want for your PS1 prompt instead {
UserName="\u"
HostName="\h"
Time12h="\T"
Time12a="\@"
PathShort="\W"
PathFull="\w"
NewLine="\n"
Jobs="\j"
#}
#  Customize BASH PS1 prompt to show current GIT repository and branch.
#  by Mike Stewart - http://MediaDoneRight.com
# Load in the git branch prompt script.
source ~/.git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWCOLORHINTS=true
GIT_PS1_SHOWUPSTREAM=true
GIT_PS1_UNTRACKEDFILES=true

#PS1="${Blue}${UserName}${ColorOff} "
#PS1+="\$(git_color)"
#PS1+="\$(git_branch)${ColorOff}"
#PS1+=" ${Orange}~${ColorOff}>> "
#export PS1
#PS1="[${Orange}\h${ColorOff} \W\$(git_color)\$(__git_ps1 \" (%s)\")]\$ "
#export PS1
export PS1=${HostName}" ${Blue}${PathShort}${ColorOff}"'$(git branch &>/dev/null;\
   if [ $? -eq 0 ]; then \
       echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
   if [ "$?" -eq "0" ]; then \
      # @4 - Clean repo - nothing to commit
      echo "'$Green'"$(__git_ps1 " (%s)"); \
   else
      # @5 - Changes to working tree
      echo "'$Orange'"$(__git_ps1 " {%s}"); \
   fi) '$ColorOff'>> "; \
  else
     # @2 - Prompt when not git repo 
     echo " >> "; \
     fi)'
# }
# vim: set fdm=marker fmr={,}:
